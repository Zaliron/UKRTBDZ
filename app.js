let tg = window.Telegram.WebApp;
tg.expand(); // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω 

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –±–æ—Ç–∞
const initData = tg.initDataUnsafe || {};
const user = initData.user || {};

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ –±–æ—Ç–∞
const GROUPS = {
    "9–ò–°–ü-12–ö-24": "9isp12k24",
    "9–ö–°–ö-10-24": "9ksk1024",
    "9–ò–°–ü-111–ö-24": "9isp111k24",
    "9–ò–ö–°–°-13-24": "9ikss1324"
};

// –ü—Ä–µ–¥–º–µ—Ç—ã —Å —ç–º–æ–¥–∑–∏
const SUBJECTS = {
    "–ë–∞—à–∫–∏—Ä—Å–∫–∏–π —è–∑—ã–∫": "üìö",
    "–ë–∏–æ–ª–æ–≥–∏—è": "üß¨",
    "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è": "üåç",
    "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫": "üåê",
    "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞": "üíª",
    "–ò—Å—Ç–æ—Ä–∏—è": "üìú",
    "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞": "üìñ",
    "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": "üî¢",
    "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ: –ø—Ä–∞–≤–æ": "‚öñÔ∏è",
    "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ: —ç–∫–æ–Ω–æ–º–∏–∫–∞": "üìä",
    "–û—Å–Ω–æ–≤—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∑–∞—â–∏—Ç—ã –†–æ–¥–∏–Ω—ã": "üõ°Ô∏è",
    "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫": "‚úçÔ∏è",
    "–§–∏–∑–∏–∫–∞": "‚ö°",
    "–§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞": "üèÉ",
    "–•–∏–º–∏—è": "üß™"
};

const STATUS_EMOJI = {
    'new': 'üÜï',
    'updated': 'üîÑ',
    'loading': '‚è≥',
    'success': '‚úÖ',
    'error': '‚ùå'
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
    currentGroup: null,
    currentSubject: null,
    currentView: 'groups', // –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
    isSubscribed: false
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
function renderGroupSelector() {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–ª –≥—Ä—É–ø–ø—É –≤ –±–æ—Ç–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—ã–±–æ—Ä
    if (initData.start_param) {
        selectGroup(initData.start_param);
        return;
    }
    
    const groupSelector = document.getElementById('group-selector');
    groupSelector.style.display = 'block';
    const groups = Object.entries(GROUPS);
    
    const groupButtons = groups.map(([name, id]) => `
        <button class="group-button action-button" onclick="selectGroup('${id}', '${name}')">
            üë• ${name}
        </button>
    `).join('');
    
    groupSelector.innerHTML = `
        <div class="group-selector">
            <h2>–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É:</h2>
            ${groupButtons}
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
function selectGroup(groupId, groupName) {
    state.currentGroup = groupId;
    state.currentView = 'subjects';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ –±–æ—Ç–∞
    tg.sendData(JSON.stringify({
        action: 'select_group',
        group: groupId
    }));
    
    renderSubjects();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
function renderSubjects() {
    document.getElementById('group-selector').style.display = 'none';
    const subjectsList = document.getElementById('subjects-list');
    subjectsList.style.display = 'block';
    
    const subjectsHtml = Object.entries(SUBJECTS).map(([subject, emoji]) => `
        <div class="subject-card" onclick="viewSubject('${subject}')">
            <div class="subject-title">${emoji} ${subject}</div>
            <div class="subject-status">–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</div>
        </div>
    `).join('');
    
    subjectsList.innerHTML = `
        <div class="subjects-header">
            <h2>–ü—Ä–µ–¥–º–µ—Ç—ã</h2>
            <button class="action-button back-button" onclick="goBack()">¬´ –ù–∞–∑–∞–¥</button>
            <button class="action-button" onclick="showNotificationSettings()">
                üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            </button>
        </div>
        ${subjectsHtml}
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
function viewSubject(subject) {
    state.currentSubject = subject;
    state.currentView = 'homework';
    
    document.getElementById('subjects-list').style.display = 'none';
    const homeworkView = document.getElementById('homework-view');
    homeworkView.style.display = 'block';
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
    tg.sendData(JSON.stringify({
        action: 'get_homework',
        subject: subject,
        group: state.currentGroup
    }));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    renderHomeworkPlaceholder(subject);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥–ª—É—à–∫–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
function renderHomeworkPlaceholder(subject) {
    const content = document.getElementById('homework-content');
    
    content.innerHTML = `
        <div class="homework-header">
            <h2>${SUBJECTS[subject]} ${subject}</h2>
            <button class="action-button back-button" onclick="goBack()">¬´ –ù–∞–∑–∞–¥</button>
        </div>
        <div class="homework-content">
            <div class="loading">
                ${STATUS_EMOJI.loading} –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞–Ω–∏—è...
            </div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
function goBack() {
    if (state.currentView === 'homework') {
        state.currentView = 'subjects';
        state.currentSubject = null;
        document.getElementById('homework-view').style.display = 'none';
        document.getElementById('subjects-list').style.display = 'block';
    } else if (state.currentView === 'subjects') {
        state.currentView = 'groups';
        state.currentGroup = null;
        document.getElementById('subjects-list').style.display = 'none';
        document.getElementById('group-selector').style.display = 'block';
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
function showNotificationSettings() {
    const notificationSettings = document.getElementById('notification-settings');
    notificationSettings.style.display = 'block';
    
    const subscribeBtn = document.getElementById('subscribe-btn');
    subscribeBtn.textContent = state.isSubscribed ? 
        'üîï –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π' : 
        'üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è';
}

function toggleNotifications() {
    tg.sendData(JSON.stringify({
        action: state.isSubscribed ? 'unsubscribe' : 'subscribe'
    }));
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –æ—Ç Telegram WebApp
tg.onEvent('viewportChanged', function(){
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ viewport
    tg.expand();
});

// –í –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞
tg.onEvent('message', function(message) {
    try {
        const data = JSON.parse(message.text);
        if (data.type === 'homework_data') {
            renderHomework(data);
        }
    } catch (e) {
        console.error('Error parsing message:', e);
    }
});

// –û–±–Ω–æ–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é renderHomework
function renderHomework(homework) {
    const content = document.getElementById('homework-content');
    const files = document.getElementById('homework-files');
    const actions = document.getElementById('homework-actions');
    
    content.innerHTML = `
        <div class="homework-header">
            <h2>${SUBJECTS[homework.subject]} ${homework.subject}</h2>
            <button class="action-button back-button" onclick="goBack()">¬´ –ù–∞–∑–∞–¥</button>
        </div>
        <div class="homework-content">
            <p>${homework.text}</p>
            <div class="homework-info">
                <small>–î–æ–±–∞–≤–ª–µ–Ω–æ: ${homework.date}</small>
                <small>–ê–≤—Ç–æ—Ä: ${homework.author}</small>
            </div>
        </div>
    `;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (homework.files && homework.files.length > 0) {
        files.innerHTML = homework.files.map(file => `
            <div class="homework-file">
                ${file.file_type === 'photo' 
                    ? `<img src="${file.file_id}" class="file-preview" />`
                    : `<a href="#" class="file-link" onclick="downloadFile('${file.file_id}')">
                        üìé –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
                      </a>`
                }
            </div>
        `).join('');
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    actions.innerHTML = `
        <button class="action-button" onclick="markAsComplete()">
            ‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º
        </button>
    `;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    renderGroupSelector(); // –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
    tg.ready();
}); 
